package restmanager.view;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import restmanager.controller.RestManagerController;
import restmanager.model.Order;

/**
 * Ventá que mostra a lista de pedidos en curso
 *
 * @author Profe de programación
 */
public class OrderManagerView extends javax.swing.JFrame {

    // Referenza á controladora da app
    private RestManagerController controller;
    // Lista de pedidos que se mostran
    private ArrayList<Order> orders;

    /**
     * Establece a lista de pedidos a mostrar
     *
     * @param orders Lista de pedidos que se queren mostrar
     */
    public void setOrders(ArrayList<Order> orders) {
        this.orders = orders;
        // Cargamos os pedidos na lista
        DefaultListModel model = new DefaultListModel();
        for (Order order : orders) {
            model.addElement("Mesa " + order.getTableNumber());
        }
        jListOrders.setModel(model);
    }

    /**
     * Creates new form OrderManagerView
     *
     * @param controller Referenza á controladora da app
     */
    public OrderManagerView(RestManagerController controller) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
        }

        initComponents();
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLblOrders = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListOrders = new javax.swing.JList<>();
        jBtnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Xestión de pedidos");
        setPreferredSize(new java.awt.Dimension(500, 600));

        jLblOrders.setText("Lista de pedidos en curso:");
        getContentPane().add(jLblOrders, java.awt.BorderLayout.PAGE_START);

        jListOrders.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListOrdersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListOrders);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jBtnRefresh.setText("Actualizar");
        jBtnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRefreshActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnRefresh, java.awt.BorderLayout.PAGE_END);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRefreshActionPerformed
        // Chamamos á controladora para actualizar a lista de pedidos
        controller.refreshOrders();
    }//GEN-LAST:event_jBtnRefreshActionPerformed

    private void jListOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListOrdersMouseClicked
        // Se se fai dobre clic sobre un pedido, chamamos á controladora para
        // mostrar os seus datos
        if ((evt.getClickCount() == 2) && (jListOrders.getSelectedIndex() != -1)) {
            controller.showOrderDetails(orders.get(jListOrders.getSelectedIndex()));
        }
    }//GEN-LAST:event_jListOrdersMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnRefresh;
    private javax.swing.JLabel jLblOrders;
    private javax.swing.JList<String> jListOrders;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
